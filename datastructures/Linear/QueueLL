class LLQueue:
    def __init__(self):
        self.head = None
        self.tail = None
        self.length = 0

    def enque(self, value):
        node = Node(value)
        if self.tail:
            self.tail.next = node
            self.tail = node
        else:
            self.head = node
            self.tail = node
        self.length += 1

    def dequeue(self):
        if not self.head:
            return None
        value = self.head.value
        self.head = self.head.next
        if not self.head:
            self.tail = None
        self.length -= 1
        return value

    def size(self):
        return self.length

    # override any methods that do not apply to queue behavior with empty body
    def insert_head(self, node):
        pass

    def insert_after(self, prev_node, node):
        pass

    def delete_node(self, key):
        pass